<?xml version="1.0" encoding="UTF-8"?>
<Graph author="ks" created="Sun Apr 10 11:01:10 PDT 2022" guiVersion="5.14.0.13" id="1649613976594" licenseCode="CLP1DNORTH62203660EX" name="SeattleHomePriceIndex" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="CalendarDBData" previewAttachmentCharset="UTF-8" recordDelimiter="\r\n" type="delimited">
<Field format="MM/dd/yyyy hh:mm:ss a" name="Date" type="date"/>
<Field name="RentalPrice" type="decimal"/>
</Record>
</Metadata>
<Metadata id="Metadata2">
<Record fieldDelimiter="|" name="Joined" recordDelimiter="\n" type="delimited">
<Field format="MM/dd/yyyy hh:mm:ss a" name="Date" trim="true" type="date"/>
<Field length="12" name="RentalPrice" scale="2" trim="true" type="decimal"/>
<Field name="HomePriceIndex" type="decimal"/>
</Record>
</Metadata>
<Metadata id="Metadata1">
<Record fieldDelimiter="|" name="PriceIndexCSV" previewAttachmentCharset="UTF-8" recordDelimiter="\r\n" type="delimited">
<Field format="MM/dd/yyyy hh:mm:ss a" name="Date" type="date"/>
<Field name="HomePriceIndex" type="decimal"/>
</Record>
</Metadata>
<Connection database="MYSQL" dbURL="jdbc:mysql://database-5200project.c9waj8ur4czk.us-west-1.rds.amazonaws.com:3306/Gr8BnBApplication" id="JDBC0" jdbcSpecific="MYSQL" name="NewConnection" password="database-5200project" type="JDBC" user="root"/>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="ECF0F0" folded="false" fontSize="large" height="438" id="Note0" textColor="000000" width="201" x="66" y="94">
<attr name="text"><![CDATA[h2. *EXTRACT*]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FFBF59" folded="false" fontSize="large" height="57" id="Note8" textColor="000000" width="336" x="430" y="-23">
<attr name="text"><![CDATA[h3. Home Price Index ETL
]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="DEF4AB" folded="false" fontSize="medium" height="146" id="Note1" textColor="444444" width="171" x="81" y="154">
<attr name="text"><![CDATA[*Extract Listing Data From AWS Rds*]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="DEF4AB" folded="false" fontSize="medium" height="189" id="Note2" textColor="444444" width="171" x="81" y="315">
<attr name="text"><![CDATA[*Extract Price Data from HomePriceIndex CSV*]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="large" height="438" id="Note3" textColor="444444" width="265" x="300" y="94">
<attr name="text"><![CDATA[h2. *TRANSFORM*]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="C1E6FF" folded="false" fontSize="large" height="438" id="Note6" textColor="444444" width="155" x="587" y="94">
<attr name="text"><![CDATA[h2. LOAD











*Load joined data into MySQL Data Warehouse Table*]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="EEDDF1" folded="false" fontSize="large" height="438" id="Note7" textColor="444444" width="388" x="765" y="94">
<attr name="text"><![CDATA[h2. WRITE


















*Write data to an XLSX file to perform data analysis.*]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node dataPolicy="lenient" dbConnection="JDBC0" guiName="DatabaseReader" guiX="103" guiY="213" id="DATABASE_READER" type="DB_INPUT_TABLE">
<attr name="sqlQuery"><![CDATA[SELECT CONCAT(DATE_FORMAT(Calendar.Date, '%Y-%m-'), '01'), Calendar.Price
FROM Calendar]]></attr>
</Node>
<Node guiName="DatabaseWriter" guiX="601" guiY="239" id="DATABASE_WRITER" type="DB_OUTPUT_TABLE"/>
<Node guiName="ExtHashJoin" guiX="373" guiY="299" id="EXT_HASH_JOIN" joinKey="$Date=$Date" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.Date = $in.0.Date;
	$out.0.RentalPrice = $in.0.RentalPrice;
	$out.0.HomePriceIndex = $in.1.HomePriceIndex;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node dataPolicy="lenient" fileURL="${DATAIN_DIR}/PriceIndex.csv" guiName="UniversalDataReader" guiX="93" guiY="387" id="UNIVERSAL_DATA_READER" trim="true" type="DATA_READER"/>
<Edge fromNode="DATABASE_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (driver)" metadata="Metadata0" outPort="Port 0 (out)" toNode="EXT_HASH_JOIN:0"/>
<Edge fromNode="EXT_HASH_JOIN:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DATABASE_WRITER:0"/>
<Edge fromNode="UNIVERSAL_DATA_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 1 (slave)" metadata="Metadata1" outPort="Port 0 (output)" toNode="EXT_HASH_JOIN:1"/>
</Phase>
</Graph>
